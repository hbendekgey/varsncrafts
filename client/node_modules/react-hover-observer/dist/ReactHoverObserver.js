(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define(['exports', 'react', 'lodash.assign', 'lodash.noop', 'lodash.omit'], factory);
    } else if (typeof exports !== "undefined") {
        factory(exports, require('react'), require('lodash.assign'), require('lodash.noop'), require('lodash.omit'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, global.react, global.lodash, global.lodash, global.lodash);
        global.ReactHoverObserver = mod.exports;
    }
})(this, function (exports, _react, _lodash, _lodash3, _lodash5) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _interopRequireDefault(_react);

    var _lodash2 = _interopRequireDefault(_lodash);

    var _lodash4 = _interopRequireDefault(_lodash3);

    var _lodash6 = _interopRequireDefault(_lodash5);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    exports.default = _react2.default.createClass({

        displayName: 'ReactHoverObserver',

        timerIds: [],

        getDefaultProps: function getDefaultProps() {
            return {
                hoverDelayInMs: 0,
                hoverOffDelayInMs: 0,
                onHoverChanged: _lodash4.default,
                onMouseEnter: _lodash4.default,
                onMouseLeave: _lodash4.default,
                onMouseOver: _lodash4.default,
                onMouseOut: _lodash4.default,
                shouldDecorateChildren: true
            };
        },


        propTypes: {
            className: _react.PropTypes.string,
            hoverDelayInMs: _react.PropTypes.number,
            hoverOffDelayInMs: _react.PropTypes.number,
            onHoverChanged: _react.PropTypes.func,
            onMouseEnter: _react.PropTypes.func,
            onMouseLeave: _react.PropTypes.func,
            onMouseOver: _react.PropTypes.func,
            onMouseOut: _react.PropTypes.func,
            shouldDecorateChildren: _react.PropTypes.bool
        },

        getInitialState: function getInitialState() {
            return {
                isHovering: false
            };
        },
        onMouseEnter: function onMouseEnter(e) {
            this.props.onMouseEnter({
                e: e,
                setIsHovering: this.setIsHovering,
                unsetIsHovering: this.unsetIsHovering
            });
        },
        onMouseLeave: function onMouseLeave(e) {
            this.props.onMouseLeave({
                e: e,
                setIsHovering: this.setIsHovering,
                unsetIsHovering: this.unsetIsHovering
            });
        },
        onMouseOver: function onMouseOver(e) {
            this.props.onMouseOver({
                e: e,
                setIsHovering: this.setIsHovering,
                unsetIsHovering: this.unsetIsHovering
            });
        },
        onMouseOut: function onMouseOut(e) {
            this.props.onMouseOut({
                e: e,
                setIsHovering: this.setIsHovering,
                unsetIsHovering: this.unsetIsHovering
            });
        },
        componentWillUnmount: function componentWillUnmount() {
            this.clearTimers();
        },
        setIsHovering: function setIsHovering() {
            var _this = this;

            this.clearTimers();

            var hoverScheduleId = setTimeout(function () {
                var newState = { isHovering: true };
                _this.setState(newState, function () {
                    _this.props.onHoverChanged(newState);
                });
            }, this.props.hoverDelayInMs);

            this.timerIds.push(hoverScheduleId);
        },
        unsetIsHovering: function unsetIsHovering() {
            var _this2 = this;

            this.clearTimers();

            var hoverOffScheduleId = setTimeout(function () {
                var newState = { isHovering: false };
                _this2.setState(newState, function () {
                    _this2.props.onHoverChanged(newState);
                });
            }, this.props.hoverOffDelayInMs);

            this.timerIds.push(hoverOffScheduleId);
        },
        clearTimers: function clearTimers() {
            var ids = this.timerIds;
            while (ids.length) {
                window.clearTimeout(ids.pop());
            }
        },
        isReactComponent: function isReactComponent(reactElement) {
            return typeof reactElement.type === 'function';
        },
        shouldDecorateChild: function shouldDecorateChild(child) {
            return this.isReactComponent(child) && this.props.shouldDecorateChildren;
        },
        decorateChild: function decorateChild(child, props) {
            return (0, _react.cloneElement)(child, props);
        },
        renderChildrenWithProps: function renderChildrenWithProps(children, props) {
            var _this3 = this;

            return _react.Children.map(children, function (child) {
                return _this3.shouldDecorateChild(child) ? _this3.decorateChild(child, props) : child;
            });
        },
        render: function render() {
            var _props = this.props;
            var children = _props.children;
            var className = _props.className;

            var childProps = (0, _lodash2.default)({}, { isHovering: this.state.isHovering }, (0, _lodash6.default)(this.props, ['children', 'className', 'hoverDelayInMs', 'hoverOffDelayInMs', 'onHoverChanged', 'onMouseEnter', 'onMouseLeave', 'onMouseOver', 'onMouseOut', 'shouldDecorateChildren']));

            return _react2.default.createElement(
                'div',
                {
                    className: className,
                    onMouseEnter: this.onMouseEnter,
                    onMouseLeave: this.onMouseLeave,
                    onMouseOver: this.onMouseOver,
                    onMouseOut: this.onMouseOut
                },
                this.renderChildrenWithProps(children, childProps)
            );
        }
    });
});